// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Blog.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250622062730_InitialCreateWithSeed")]
    partial class InitialCreateWithSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7890-abcd-ef1234567890"),
                            CategoryId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            Content = "Asp.NET Core Core Deneme İçerik 1",
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2025, 6, 22, 6, 27, 30, 77, DateTimeKind.Utc).AddTicks(5420),
                            ImageId = new Guid("0d804ae8-17d6-470e-966d-3d82c4f46662"),
                            IsDeleted = false,
                            Title = "Asp.NET Core Core Deneme Makalesi 1",
                            ViewCount = 2
                        },
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7890-bcde-ef1234567890"),
                            CategoryId = new Guid("fd2060b6-a32f-46b6-94d4-a3ad14b6b372"),
                            Content = "Asp.NET Core Core Deneme İçerik 2",
                            CreatedBy = "Admin test",
                            CreatedDate = new DateTime(2025, 6, 22, 6, 27, 30, 77, DateTimeKind.Utc).AddTicks(5420),
                            ImageId = new Guid("840a754b-f051-45f3-90c5-61d1e249d5a5"),
                            IsDeleted = false,
                            Title = "Asp.NET Core Core Deneme Makalesi 2",
                            ViewCount = 24
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2025, 6, 22, 6, 27, 30, 77, DateTimeKind.Utc).AddTicks(5960),
                            IsDeleted = false,
                            Name = "ASP.NET"
                        },
                        new
                        {
                            Id = new Guid("fd2060b6-a32f-46b6-94d4-a3ad14b6b372"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2025, 6, 22, 6, 27, 30, 77, DateTimeKind.Utc).AddTicks(5970),
                            IsDeleted = false,
                            Name = "ASP.NET 2"
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d804ae8-17d6-470e-966d-3d82c4f46662"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2025, 6, 22, 6, 27, 30, 77, DateTimeKind.Utc).AddTicks(6350),
                            FileType = "jpg",
                            IsDeleted = false,
                            fileName = "images/testimage"
                        },
                        new
                        {
                            Id = new Guid("840a754b-f051-45f3-90c5-61d1e249d5a5"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2025, 6, 22, 6, 27, 30, 77, DateTimeKind.Utc).AddTicks(6350),
                            FileType = "jpg",
                            IsDeleted = false,
                            fileName = "images/testimage"
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.HasOne("Blog.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
